{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import{ScreenContainer,Screen,screensEnabled}from'react-native-screens';import{getDefaultHeaderHeight}from\"../Header/HeaderSegment\";import CardContainer from\"./CardContainer\";import{DefaultTransition,ModalTransition}from\"../../TransitionConfigs/TransitionPresets\";import{forNoAnimation as forNoAnimationHeader}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import{forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";var EPSILON=0.01;var WebScreen=function(_React$Component){_inherits(WebScreen,_React$Component);var _super=_createSuper(WebScreen);function WebScreen(){_classCallCheck(this,WebScreen);return _super.apply(this,arguments);}_createClass(WebScreen,[{key:\"render\",value:function render(){var _this$props=this.props,active=_this$props.active,style=_this$props.style,rest=_objectWithoutProperties(_this$props,[\"active\",\"style\"]);return React.createElement(View,_extends({hidden:!active,style:[style,{display:active?'flex':'none'}]},rest));}}]);return WebScreen;}(React.Component);var AnimatedWebScreen=Animated.createAnimatedComponent(WebScreen);var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,[\"enabled\"]);if(enabled&&Platform.OS!=='web'&&screensEnabled()){return React.createElement(ScreenContainer,rest);}return React.createElement(View,rest);};var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,[\"enabled\",\"active\"]);if(enabled&&Platform.OS==='web'){return React.createElement(AnimatedWebScreen,_extends({active:active},rest));}if(enabled&&screensEnabled()){return React.createElement(Screen,_extends({active:active},rest));}return React.createElement(View,rest);};var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getHeaderHeights=function getHeaderHeights(routes,insets,descriptors,layout,previous){return routes.reduce(function(acc,curr){var _ref3=descriptors[curr.key]||{},_ref3$options=_ref3.options,options=_ref3$options===void 0?{}:_ref3$options;var _StyleSheet$flatten=StyleSheet.flatten(options.headerStyle||{}),_StyleSheet$flatten$h=_StyleSheet$flatten.height,height=_StyleSheet$flatten$h===void 0?previous[curr.key]:_StyleSheet$flatten$h;var safeAreaInsets=_objectSpread({},insets,{},options.safeAreaInsets);var _options$headerStatus=options.headerStatusBarHeight,headerStatusBarHeight=_options$headerStatus===void 0?safeAreaInsets.top:_options$headerStatus;acc[curr.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(mode,layout,descriptor){var _ref4=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},_ref4$gestureDirectio=_ref4.gestureDirection,gestureDirection=_ref4$gestureDirectio===void 0?mode==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection:_ref4$gestureDirectio;return getDistanceForDirection(layout,gestureDirection);};var getProgressFromGesture=function getProgressFromGesture(mode,gesture,layout,descriptor){var distance=getDistanceFromOptions(mode,{width:Math.max(1,layout.width),height:Math.max(1,layout.height)},descriptor);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};var CardStack=function(_React$Component2){_inherits(CardStack,_React$Component2);var _super2=_createSuper(CardStack);_createClass(CardStack,null,[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=props.routes.reduce(function(acc,curr){var descriptor=props.descriptors[curr.key];var _ref5=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},animationEnabled=_ref5.animationEnabled;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animationEnabled!==false?getDistanceFromOptions(props.mode,state.layout,descriptor):0);return acc;},{});return{routes:props.routes,scenes:props.routes.map(function(route,index,self){var previousRoute=self[index-1];var nextRoute=self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=props.descriptors[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=props.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key]||state.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key];var previousDescriptor=props.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key]||state.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key];var scene={route:route,descriptor:descriptor,progress:{current:getProgressFromGesture(props.mode,currentGesture,state.layout,descriptor),next:nextGesture?getProgressFromGesture(props.mode,nextGesture,state.layout,nextDescriptor):undefined,previous:previousGesture?getProgressFromGesture(props.mode,previousGesture,state.layout,previousDescriptor):undefined},__memo:[route,state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;}),gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(props.routes,props.insets,state.descriptors,state.layout,state.headerHeights)};}}]);function CardStack(_props){var _this;_classCallCheck(this,CardStack);_this=_super2.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"handleLayout\",function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(props.routes,props.insets,state.descriptors,layout,{})};});});_defineProperty(_assertThisInitialized(_this),\"handleHeaderLayout\",function(_ref6){var route=_ref6.route,height=_ref6.height;_this.setState(function(_ref7){var headerHeights=_ref7.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread({},headerHeights,_defineProperty2({},route.key,height))};});});_defineProperty(_assertThisInitialized(_this),\"getFocusedRoute\",function(){var state=_this.props.state;return state.routes[state.index];});var _Dimensions$get=Dimensions.get('window'),_Dimensions$get$heigh=_Dimensions$get.height,_height=_Dimensions$get$heigh===void 0?0:_Dimensions$get$heigh,_Dimensions$get$width=_Dimensions$get.width,_width=_Dimensions$get$width===void 0?0:_Dimensions$get$width;_this.state={routes:[],scenes:[],gestures:{},layout:{height:_height,width:_width},descriptors:_this.props.descriptors,headerHeights:{}};return _this;}_createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,mode=_this$props2.mode,insets=_this$props2.insets,descriptors=_this$props2.descriptors,state=_this$props2.state,routes=_this$props2.routes,closingRouteKeys=_this$props2.closingRouteKeys,onOpenRoute=_this$props2.onOpenRoute,onCloseRoute=_this$props2.onCloseRoute,getPreviousRoute=_this$props2.getPreviousRoute,getGesturesEnabled=_this$props2.getGesturesEnabled,renderHeader=_this$props2.renderHeader,renderScene=_this$props2.renderScene,headerMode=_this$props2.headerMode,onTransitionStart=_this$props2.onTransitionStart,onTransitionEnd=_this$props2.onTransitionEnd,onPageChangeStart=_this$props2.onPageChangeStart,onPageChangeConfirm=_this$props2.onPageChangeConfirm,onPageChangeCancel=_this$props2.onPageChangeCancel;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor?focusedDescriptor.options:{};var defaultTransitionPreset=mode==='modal'?ModalTransition:DefaultTransition;if(headerMode==='screen'){defaultTransitionPreset=_objectSpread({},defaultTransitionPreset,{headerStyleInterpolator:forNoAnimationHeader});}var _ref8=focusedOptions.safeAreaInsets||{},_ref8$top=_ref8.top,top=_ref8$top===void 0?insets.top:_ref8$top,_ref8$right=_ref8.right,right=_ref8$right===void 0?insets.right:_ref8$right,_ref8$bottom=_ref8.bottom,bottom=_ref8$bottom===void 0?insets.bottom:_ref8$bottom,_ref8$left=_ref8.left,left=_ref8$left===void 0?insets.left:_ref8$left;var isScreensEnabled=Platform.OS!=='ios'&&mode!=='modal';return React.createElement(React.Fragment,null,React.createElement(MaybeScreenContainer,{enabled:isScreensEnabled,style:styles.container,onLayout:this.handleLayout},routes.map(function(route,index,self){var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isScreenActive=scene.progress.next?scene.progress.next.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,0],extrapolate:'clamp'}):1;var _ref9=scene.descriptor?scene.descriptor.options:{},safeAreaInsets=_ref9.safeAreaInsets,headerShown=_ref9.headerShown,headerTransparent=_ref9.headerTransparent,cardShadowEnabled=_ref9.cardShadowEnabled,cardOverlayEnabled=_ref9.cardOverlayEnabled,cardOverlay=_ref9.cardOverlay,cardStyle=_ref9.cardStyle,animationEnabled=_ref9.animationEnabled,gestureResponseDistance=_ref9.gestureResponseDistance,gestureVelocityImpact=_ref9.gestureVelocityImpact,_ref9$gestureDirectio=_ref9.gestureDirection,gestureDirection=_ref9$gestureDirectio===void 0?defaultTransitionPreset.gestureDirection:_ref9$gestureDirectio,_ref9$transitionSpec=_ref9.transitionSpec,transitionSpec=_ref9$transitionSpec===void 0?defaultTransitionPreset.transitionSpec:_ref9$transitionSpec,_ref9$cardStyleInterp=_ref9.cardStyleInterpolator,cardStyleInterpolator=_ref9$cardStyleInterp===void 0?animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_ref9$cardStyleInterp,_ref9$headerStyleInte=_ref9.headerStyleInterpolator,headerStyleInterpolator=_ref9$headerStyleInte===void 0?defaultTransitionPreset.headerStyleInterpolator:_ref9$headerStyleInte;var transitionConfig={gestureDirection:gestureDirection,transitionSpec:transitionSpec,cardStyleInterpolator:cardStyleInterpolator,headerStyleInterpolator:headerStyleInterpolator};if(index!==self.length-1){var nextScene=scenes[index+1];if(nextScene){var _ref10=nextScene.descriptor?nextScene.descriptor.options:{},_animationEnabled=_ref10.animationEnabled,_ref10$gestureDirecti=_ref10.gestureDirection,_gestureDirection=_ref10$gestureDirecti===void 0?defaultTransitionPreset.gestureDirection:_ref10$gestureDirecti,_ref10$transitionSpec=_ref10.transitionSpec,_transitionSpec=_ref10$transitionSpec===void 0?defaultTransitionPreset.transitionSpec:_ref10$transitionSpec,_ref10$cardStyleInter=_ref10.cardStyleInterpolator,_cardStyleInterpolator=_ref10$cardStyleInter===void 0?_animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_ref10$cardStyleInter,_ref10$headerStyleInt=_ref10.headerStyleInterpolator,_headerStyleInterpolator=_ref10$headerStyleInt===void 0?defaultTransitionPreset.headerStyleInterpolator:_ref10$headerStyleInt;transitionConfig={gestureDirection:_gestureDirection,transitionSpec:_transitionSpec,cardStyleInterpolator:_cardStyleInterpolator,headerStyleInterpolator:_headerStyleInterpolator};}}var _ref11=safeAreaInsets||{},_ref11$top=_ref11.top,safeAreaInsetTop=_ref11$top===void 0?insets.top:_ref11$top,_ref11$right=_ref11.right,safeAreaInsetRight=_ref11$right===void 0?insets.right:_ref11$right,_ref11$bottom=_ref11.bottom,safeAreaInsetBottom=_ref11$bottom===void 0?insets.bottom:_ref11$bottom,_ref11$left=_ref11.left,safeAreaInsetLeft=_ref11$left===void 0?insets.left:_ref11$left;var previousRoute=getPreviousRoute({route:scene.route});var previousScene=scenes[index-1];if(previousRoute){for(var j=index-1;j>=0;j--){var s=scenes[j];if(s&&s.route.key===previousRoute.key){previousScene=s;break;}}}return React.createElement(MaybeScreen,{key:route.key,style:StyleSheet.absoluteFill,enabled:isScreensEnabled,active:isScreenActive,pointerEvents:\"box-none\"},React.createElement(CardContainer,_extends({index:index,active:index===self.length-1,focused:focused,closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,previousScene:previousScene,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,cardOverlay:cardOverlay,cardOverlayEnabled:cardOverlayEnabled,cardShadowEnabled:cardShadowEnabled,cardStyle:cardStyle,onPageChangeStart:onPageChangeStart,onPageChangeConfirm:onPageChangeConfirm,onPageChangeCancel:onPageChangeCancel,gestureResponseDistance:gestureResponseDistance,headerHeight:headerHeights[route.key],onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousRoute:getPreviousRoute,getFocusedRoute:_this2.getFocusedRoute,headerMode:headerMode,headerShown:headerShown,headerTransparent:headerTransparent,renderHeader:renderHeader,renderScene:renderScene,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,gestureEnabled:index!==0&&getGesturesEnabled({route:route}),gestureVelocityImpact:gestureVelocityImpact},transitionConfig)));})),headerMode==='float'?renderHeader({mode:'float',layout:layout,insets:{top:top,right:right,bottom:bottom,left:left},scenes:scenes,getPreviousRoute:getPreviousRoute,getFocusedRoute:this.getFocusedRoute,onContentHeightChange:this.handleHeaderLayout,gestureDirection:focusedOptions.gestureDirection!==undefined?focusedOptions.gestureDirection:defaultTransitionPreset.gestureDirection,styleInterpolator:focusedOptions.headerStyleInterpolator!==undefined?focusedOptions.headerStyleInterpolator:defaultTransitionPreset.headerStyleInterpolator,style:styles.floating}):null);}}]);return CardStack;}(React.Component);export{CardStack as default};var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},floating:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"sources":["CardStack.tsx"],"names":["forNoAnimation","EPSILON","React","style","display","active","AnimatedWebScreen","Animated","MaybeScreenContainer","enabled","rest","Platform","screensEnabled","MaybeScreen","FALLBACK_DESCRIPTOR","options","getHeaderHeights","descriptors","curr","height","previous","StyleSheet","safeAreaInsets","headerStatusBarHeight","top","acc","getDefaultHeaderHeight","getDistanceFromOptions","gestureDirection","mode","ModalTransition","DefaultTransition","getDistanceForDirection","getProgressFromGesture","distance","width","Math","layout","inputRange","outputRange","props","state","gestures","descriptor","animationEnabled","routes","scenes","previousRoute","self","index","nextRoute","oldScene","currentGesture","route","previousGesture","nextGesture","nextDescriptor","previousDescriptor","scene","progress","current","next","undefined","__memo","headerHeights","constructor","Dimensions","e","previousHeight","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerMode","headerStyleInterpolator","forNoAnimationHeader","insets","right","bottom","left","isScreensEnabled","styles","handleLayout","focused","gesture","isScreenActive","extrapolate","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","getPreviousRoute","previousScene","j","s","closingRouteKeys","getGesturesEnabled","gestureVelocityImpact","renderHeader","getFocusedRoute","onContentHeightChange","styleInterpolator","floating","container","flex","overflow","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 0.01;\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-ignore\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\nconst MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && screensEnabled()) {\n    return <ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    // @ts-ignore\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(\n    mode,\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: { height, width },\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS and web, so we only enable it on Android\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={isScreensEnabled}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            const isScreenActive = scene.progress.next\n              ? scene.progress.next.interpolate({\n                  inputRange: [0, 1 - EPSILON, 1],\n                  outputRange: [1, 1, 0],\n                  extrapolate: 'clamp',\n                })\n              : 1;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardOverlay,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            const previousRoute = getPreviousRoute({ route: scene.route });\n\n            let previousScene = scenes[index - 1];\n\n            if (previousRoute) {\n              // The previous scene will be shortly before the current scene in the array\n              // So loop back from current index to avoid looping over the full array\n              for (let j = index - 1; j >= 0; j--) {\n                const s = scenes[j];\n\n                if (s && s.route.key === previousRoute.key) {\n                  previousScene = s;\n                  break;\n                }\n              }\n            }\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={isScreensEnabled}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={previousScene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlay={cardOverlay}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  getFocusedRoute={this.getFocusedRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              getPreviousRoute,\n              getFocusedRoute: this.getFocusedRoute,\n              onContentHeightChange: this.handleHeaderLayout,\n              gestureDirection:\n                focusedOptions.gestureDirection !== undefined\n                  ? focusedOptions.gestureDirection\n                  : defaultTransitionPreset.gestureDirection,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}